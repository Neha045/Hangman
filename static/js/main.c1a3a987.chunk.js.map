{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helper/helper.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","class","style","display","onClick","Notification","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAWeA,EATA,WACX,OACI,oCACE,yCACA,sECoBKC,EAxBA,SAAC,GAAsB,IAC5BC,EAD2B,EAAnBC,aACcC,OAC5B,OACA,yBAAKC,OAAO,MAAMC,MAAM,MAAMC,UAAU,oBAEpC,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OAClC,0BAAMH,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,OACnC,0BAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QACjC,0BAAMH,GAAG,KAAKC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAGjCT,EAAO,GAAK,4BAAQU,GAAG,MAAMC,GAAG,KAAKC,EAAE,OAEvCZ,EAAO,GAAK,0BAAMM,GAAG,MAAMC,GAAG,KAAKC,GAAG,MAAMC,GAAG,QAE/CT,EAAO,GAAK,0BAAMM,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAChDT,EAAO,GAAK,0BAAMM,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAEhDT,EAAO,GAAK,0BAAMM,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,QAChDT,EAAO,GAAK,0BAAMM,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,UCN3CI,EAbM,SAAC,GAAoB,IAAnBZ,EAAkB,EAAlBA,aACnB,OACA,yBAAKI,UAAU,2BACX,6BACKJ,EAAaC,OAAS,GAAK,oCAC3BD,EACIa,KAAI,SAACC,EAAQC,GAAT,OAAe,0BAAMC,IAAKD,GAAID,MAClCG,QAAO,SAACC,EAAMC,GAAP,OAAyB,OAATD,EAAgB,CAACC,GAAQ,CAACD,EAAM,KAAMC,KAAO,SCQtEC,EAfF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAE5B,OACE,yBAAKlB,UAAU,QACZiB,EAAaE,MAAM,IAAIV,KAAI,SAACC,EAAQC,GACnC,OACE,0BAAMX,UAAU,SAASY,IAAKD,GAC3BO,EAAeE,SAASV,GAAUA,EAAS,SCTjD,SAASW,EAAiBC,GAC7BA,GAAO,GACPC,YAAW,WACPD,GAAO,KACR,KAGA,SAASE,EAASC,EAASC,EAAOC,GACrC,IAAIC,EAAS,MAYb,OATAD,EAAKR,MAAM,IAAIU,SAAQ,SAAAnB,GACjBe,EAAQL,SAASV,KACnBkB,EAAS,OAKO,IAAjBF,EAAM7B,SAAc+B,EAAS,QAEzBA,ECjBX,IA2BeE,EA3BD,SAAC,GAA4E,IAA1Eb,EAAyE,EAAzEA,aAAcrB,EAA2D,EAA3DA,aAAcsB,EAA6C,EAA7CA,eAAgBa,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAClEC,EAAe,GACfC,EAAyB,GACzBC,GAAW,EAaf,MAX4D,QAAzDX,EAASN,EAAgBtB,EAAcqB,IACtCgB,EAAe,yCACfE,GAAW,GACmD,SAAzDX,EAASN,EAAgBtB,EAAcqB,KAC5CgB,EAAe,uCACfC,EAAsB,4BAAwBjB,EAAxB,KACtBkB,GAAW,GAGfC,qBAAU,kBAAML,EAAYI,MAG5B,yBAAKE,MAAM,kBAAmBC,MAAwB,KAAjBL,EAAsB,CAACM,QAAQ,QAAU,IAC1E,yBAAKF,MAAM,SACP,4BAAKJ,GACL,4BAAKC,GACL,4BAAQM,QAASR,GAAjB,iBCdGS,EARM,SAAC,GAA0B,IAAxBpB,EAAuB,EAAvBA,iBACtB,OACE,yBAAKrB,UAAS,iCAA4BqB,EAAmB,OAAS,KACpE,qECKAqB,G,MAAQ,CAAC,cAAe,cAAe,YAAa,YAAa,UAAW,QAAS,QACvFzB,EAAeyB,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAM7C,SA+D3CiD,MA5Df,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNZ,EADM,KACIJ,EADJ,OAE+BgB,mBAAS,IAFxC,mBAEN7B,EAFM,KAEU8B,EAFV,OAG2BD,mBAAS,IAHpC,mBAGNnD,EAHM,KAGQqD,EAHR,OAImCF,oBAAS,GAJ5C,mBAIN1B,EAJM,KAIY6B,EAJZ,KA8Cb,OAxCAd,qBAAU,WACR,IAAMe,EAAgB,SAAAC,GAAU,IACtBxC,EAAiBwC,EAAjBxC,IAAKyC,EAAYD,EAAZC,QAEX,GAAIlB,GAAYkB,GAAW,IAAMA,GAAW,GAAI,CAC9C,IAAM3C,EAASE,EAAI0C,cAEfrC,EAAaG,SAASV,GACnBQ,EAAeE,SAASV,GAG3B6C,EAAKL,GAFLF,GAAkB,SAAAQ,GAAc,4BAAQA,GAAR,CAAwB9C,OAKrDd,EAAawB,SAASV,GAGzB6C,EAAKL,GAFLD,GAAgB,SAAArD,GAAY,4BAAQA,GAAR,CAAsBc,SAU5D,OAFA+C,OAAOC,iBAAiB,UAAWP,GAE5B,kBAAMM,OAAOE,oBAAoB,UAAWR,MAElD,CAACjC,EAAgBtB,EAAcuC,IAchC,oCACE,kBAAC,EAAD,MACA,yBAAKnC,UAAU,kBACb,kBAAC,EAAD,CAAQJ,aAAcA,IACtB,kBAAC,EAAD,CAAcA,aAAcA,IAC5B,kBAAC,EAAD,CAAMqB,aAAcA,EAAcC,eAAgBA,KAEpD,kBAAC,EAAD,CAAOA,eAAgBA,EAAgBtB,aAAcA,EAAcqB,aAAcA,EAAcc,YAAaA,EAAaC,UAnB7H,WACED,GAAY,GAGZiB,EAAkB,IAClBC,EAAgB,IAEhB,IAAMJ,EAASF,KAAKC,MAAMD,KAAKE,SAAWH,EAAM7C,QAChDoB,EAAeyB,EAAMG,MAYnB,kBAAC,EAAD,CAAcxB,iBAAmBA,MCjEvCuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c1a3a987.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n          <h1> Hangman </h1>  \r\n          <p>Find the hidden word - Enter a letter</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n    const errors = wrongLetters.length;\r\n    return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n        {/* Rod  */}\r\n        <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n        <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n        <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n        <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n        {/* Head  */}\r\n        { errors>0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n        {/* Body  */}\r\n        { errors>1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n        {/* Arms  */}\r\n        { errors>2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n        { errors>3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n        {/* Legs  */}\r\n        { errors>4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n        { errors>5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n    </svg>\r\n    )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({wrongLetters}) => {\r\n    return (\r\n    <div className=\"wrong-letters-container\">\r\n        <div>\r\n            {wrongLetters.length > 0 && <p>Wrong</p>}\r\n            {wrongLetters\r\n                .map((letter, i) => <span key={i}>{letter}</span>)\r\n                .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react';\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split('').map((letter, i) => {\r\n        return (\r\n          <span className=\"letter\" key={i}>\r\n            {correctLetters.includes(letter) ? letter : ''}\r\n          </span>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Word","export function showNotification(setter) {\r\n    setter(true);\r\n    setTimeout(()=>{\r\n        setter(false)\r\n    }, 2000)\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n    let status = 'win';\r\n  \r\n    // Check for win\r\n    word.split('').forEach(letter => {\r\n      if(!correct.includes(letter)){\r\n        status = '';\r\n      }\r\n    });\r\n    \r\n    // Check for lose\r\n    if(wrong.length === 6) status = 'lose';\r\n  \r\n    return status\r\n}","import React, {useEffect} from 'react';\r\nimport { checkWin } from '../helper/helper';\r\n\r\nconst Popup = ({ selectedWord, wrongLetters, correctLetters, setPlayable, playAgain }) => {\r\n    let finalMessage = '';\r\n    let finalMessageRevealWord = '';\r\n    let playable = true;\r\n\r\n    if(checkWin(correctLetters, wrongLetters, selectedWord) === 'win'){\r\n        finalMessage = 'Congratulations! You won! ðŸ˜ƒ';\r\n        playable = false;\r\n    }else if(checkWin(correctLetters, wrongLetters, selectedWord) === 'lose'){\r\n        finalMessage = 'Unfortunately you lost. ðŸ˜•';\r\n        finalMessageRevealWord = `... the word was: ${selectedWord} `;\r\n        playable = false;\r\n    }\r\n\r\n    useEffect(() => setPlayable(playable));\r\n\r\n    return (\r\n    <div class=\"popup-container\"  style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n        <div class=\"popup\">\r\n            <h2>{finalMessage}</h2>\r\n            <h3>{finalMessageRevealWord}</h3>\r\n            <button onClick={playAgain}>Play Again</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Popup from './components/Popup';\nimport Notification from './components/Notification';\nimport {showNotification as show} from './helper/helper';\nimport './App.css';\n\nconst words = ['application', 'programming', 'interface', 'algorithm', 'objects', 'array', 'bug' ];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = event => {\n      const { key, keyCode } = event;\n\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n    }\n\n    window.addEventListener('keydown', handleKeydown );\n\n    return () => window.removeEventListener('keydown', handleKeydown);\n\n  }, [correctLetters, wrongLetters, playable] );\n\n  function playAgain() {\n    setPlayable(true);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <>\n      <Header />\n      <div className='game-container'>\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n      <Notification showNotification={ showNotification }/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}